Харківський національний університет радіоелектроніки

Факультет комп’ютерних наук

Кафедра програмної інженерії



Звіт
з лабораторної роботи № 2
з дисципліни: «Скриптові мови програмування»




Виконала:
ст. гр. ПЗПІ-23-2
Козодой О. Д.

Перевірив:
ст. викл. каф. ПІ
Сокорчук І. П.




Харків – 2025

1 ІСТОРІЯ ЗМІН

№ 	Дата	       Версія звіту   	Опис змін та виправлень
1 	18.05.2025	 0.1	            Створено розділи «Історія змін», «Завдання», «Опис виконаної роботи»
2 	20.03.2025	 0.2	            Створено розділ «Висновки» та оформлено додатки


2 ЗАВДАННЯ

     Необхідно створити консольний застосунок «Продовольчий магазин "Весна"» на мові PHP. Програма моделює базову взаємодію користувача з магазином: вибір товарів, підрахунок підсумкового рахунку, налаштування профілю та вихід із програми. Всі дії виконуються через введення числових команд у терміналі.
     Застосунок повинен реалізовувати перевірку введених даних, динамічне формування кошика, обчислення загальної суми покупок, а також налаштування і валідацію профілю користувача. Інтерфейс програми повинен бути зручним та інформативним, із виведенням підказок та повідомлень про помилки у разі некоректного вводу.


3 ОПИС ВИКОНАНОЇ РОБОТИ

     У межах лабораторної роботи було реалізовано консольний застосунок, який імітує роботу продовольчого магазину. Користувачу доступне текстове меню з чотирма основними функціями: вибір товарів, отримання підсумкового рахунку, налаштування профілю користувача та завершення роботи програми.
     Програма складається з двох основних PHP-файлів. Файл «products.php» (дивитись додаток Б.1) містить лише визначення масиву з даними про товари. Це робить код більш організованим та модульним, дозволяючи зручно редагувати список продуктів окремо від логіки їх обробки. Основний файл «smp-pzpi-23-2-kozodoi-olesia-lab2-code.php» (дивитись додаток Б.2) реалізує основну логіку роботи програми: головне меню, взаємодію з користувачем, обробку вибору товарів, створення чека та налаштування профілю.
     У першому файлі оголошено асоціативний масив $products, де ключами є числові індекси (ID товарів), а значення — вкладені масиви з назвами та цінами продуктів:
  1 $products = [
  2     1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
  3     2 => ['name' => 'Хліб чорний', 'price' => 9],
  4     3 => ['name' => 'Сир білий', 'price' => 21],
  5     4 => ['name' => 'Сметана 20%', 'price' => 25],
  6     5 => ['name' => 'Кефір 1%', 'price' => 19],
  7     6 => ['name' => 'Вода газована', 'price' => 18],
  8     7 => ['name' => 'Печиво "Весна"', 'price' => 14],
  9 ];
     Цей масив виконує роль бази даних товарів і імпортується в основний файл за допомогою команди:
  1 require_once "smp-pzpi-23-2-kozodoi-olesia-lab2-products.php";
     Далі в основному файлі ініціалізується порожній масив $cart, у якому зберігатимуться вибрані товари користувача. Потім Функція «showMainMenu» виводить основне текстове меню:
  1 function showMainMenu()
  2 {
  3     echo "################################\n";
  4     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
  5     echo "################################\n";
  6     echo "1 Вибрати товари\n";
  7     echo "2 Отримати підсумковий рахунок\n";
  8     echo "3 Налаштувати свій профіль\n";
  9     echo "0 Вийти з програми\n";
 10     echo "Введіть команду: ";
 11 }
     У головному циклі while (true) реалізовано нескінченне опитування команди користувача. Введене значення аналізується через конструкцію switch, що забезпечує обробку доступних команд та повідомлення про помилку при введенні недопустимого значення (дивитись додаток Б.2, рядки 15-35).
     Функція «selectProducts» відповідає за логіку вибору продуктів користувачем. Кожен товар виводиться у вирівняному форматі шляхом визначення максимальної довжини назви товару.
  1 foreach ($products as $item) {
  2     preg_match_all('/./us', $item['name'], $matches);
  3     $length = count($matches[0]);
  4     if ($length > $maxNameLength) $maxNameLength = $length;
  5 }
     Далі виводиться таблиця товарів та очікується номер товару від користувача. Перевіряється, чи це число, чи воно відповідає наявному продукту. Після вибору номера товару система запитує кількість одиниць. Якщо введено кількість, більшу за 0 і меншу за 100, товар додається до кошика ($cart). Якщо кількість 0 — товар видаляється. Невірні введення супроводжуються відповідними повідомленнями. Також реалізовано форматування виводу з урахуванням Unicode-довжини (UTF-8). 
  1 preg_match_all('/./us', $name, $matches);
  2 $length = count($matches[0]);
     Після вибору товару в кошик, виводиться вміст сформованого списку обраних продуктів Фрагмент коду повної реалізації функції «selectProducts» можна подивитись в додатку Б.2, рядки 36-90.
     Функція «showReceipt» формує та виводить фінальний рахунок на основі кошика. На початку перевіряється, чи кошик порожній.
  1 if (empty($cart)) {
  2     echo "КОШИК ПОРОЖНІЙ\n";
  3     return;
  4 }
     Динамічно обчислює ширину кожного стовпця: назва, ціна, кількість, вартість.
  1 foreach ($cart as $num => $qty) {
  2     $name = $products[$num]['name'];
  3     $price = $products[$num]['price'];
  4     $sum = $price * $qty;
  5     ...
  6     $maxNameLen = max($maxNameLen, $nameLen);
  7 }
     Виводить детальну інформацію про кожен товар: назва товару, ціна за одиницю, кількість, загальна вартість. Підраховується загальна сума замовлення ($total).
  1 foreach ($cart as $num => $qty) {
  2         $name = $products[$num]['name'];
  3         $price = $products[$num]['price'];
  4         $sum = $price * $qty;
  5         $total += $sum;
  6         preg_match_all('/./us', $name, $matches);
  7         $nameLen = count($matches[0]);
  8         $namePad = str_repeat(" ", $maxNameLen - $nameLen + 2);
  9         $pricePad = str_repeat(" ", $maxPriceLen - strlen((string)$price) + 2);
 10         $qtyPad = str_repeat(" ", $maxQtyLen - strlen((string)$qty) + 2);
 11         echo "$i  $name$namePad$price$pricePad$qty$qtyPad$sum\n";
 12         $i++;
 13     }
 14     echo "РАЗОМ ДО СПЛАТИ: $total\n";
     Повну реалізацію функції «showReceipt» можна переглянути в додатку Б.2, рядки 91-134.
     За налаштування профілю користувача відповідає функція «setupProfile» (дивитись додаток Б.2, рядки 136-158). Вона реалізує введення імені та віку користувача. Для імені застосовано перевірку на наявність хоча б однієї літери та дозволено лише літери, апостроф, дефіс і пробіли. Вік повинен бути введений числом та знаходитись в межах від 7 до 150 років. У разі некоректного введення користувачу надається повідомлення про помилку з поясненням, наприклад:
  1 if ($age >= 7 && $age <= 150) break;
  2 echo "ПОМИЛКА! Користувач повинен мати вік від 7 та до 150 років\n";


4 ВИСНОВКИ

     У результаті виконання лабораторної роботи було створено функціональний консольний застосунок на мові PHP для моделювання роботи продовольчого магазину. Програма реалізує базові можливості взаємодії з користувачем: вибір товарів, формування кошика, перегляд підсумкового рахунку, а також налаштування профілю з валідацією введених даних. Структура програми розділена на окремі файли, що сприяє зрозумілості та зручності підтримки коду.
     Під час реалізації було опрацьовано принципи обробки введення, виведення форматованої інформації, організації асоціативних масивів і передачі даних між функціями. Робота поглибила навички програмування на PHP та продемонструвала можливість створення повноцінних застосунків навіть у консольному середовищі.


ДОДАТОК А
Відеозапис
Відеозапис презентації результатів лабораторної роботи: https://youtu.be/aoCGl9Vq0Bc 

Хронологічний опис відеозапису:

00:00 – Вступ
00:16 – Опис файлу з даними про продукти
00:37 – Пояснення головної логіки виконання програми
01:39 – Опис функції вибору товарів
04:15 – Опис функції отримання підсумкового рахунку
05:29 – Опис функції налаштування профіля користувача
06:25 – Демонстрація правильності виконання програми


ДОДАТОК Б
Програмний код
Б.1 Файл з даними про продукти

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab2/smp-pzpi-23-2-kozodoi-olesia-lab2/products.php 

  1 <?php
  2 $products = [
  3     1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
  4     2 => ['name' => 'Хліб чорний', 'price' => 9],
  5     3 => ['name' => 'Сир білий', 'price' => 21],
  6     4 => ['name' => 'Сметана 20%', 'price' => 25],
  7     5 => ['name' => 'Кефір 1%', 'price' => 19],
  8     6 => ['name' => 'Вода газована', 'price' => 18],
  9     7 => ['name' => 'Печиво "Весна"', 'price' => 14],
 10 ];


Б.2 Основний файл реалізації функціональності програми

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab2/smp-pzpi-23-2-kozodoi-olesia-lab2/smp-pzpi-23-2-kozodoi-olesia-lab2-code

  1 <?php
  2 include "products.php";
  3 function showMainMenu()
  4 {
  5     echo "################################\n";
  6     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
  7     echo "################################\n";
  8     echo "1 Вибрати товари\n";
  9     echo "2 Отримати підсумковий рахунок\n";
 10     echo "3 Налаштувати свій профіль\n";
 11     echo "0 Вийти з програми\n";
 12     echo "Введіть команду: ";
 13 }
 14 $cart = [];
 15 while (true) {
 16     showMainMenu();
 17     $cmd = trim(fgets(STDIN));
 18     echo "\n";
 19     switch ($cmd) {
 20         case "1":
 21             selectProducts($products, $cart);
 22             break;
 23         case "2":
 24             showReceipt($products, $cart);
 25             break;
 26         case "3":
 27             setupProfile();
 28             break;
 29         case "0":
 30             exit;
 31         default:
 32             echo "ПОМИЛКА! Невідома команда. Спробуйте ще раз\n";
 33     }
 34     echo "\n";
 35 }
 36 function selectProducts(&$products, &$cart)
 37 {
 38     $maxNameLength = 0;
 39     foreach ($products as $item) {
 40         preg_match_all('/./us', $item['name'], $matches);
 41         $length = count($matches[0]);
 42         if ($length > $maxNameLength) $maxNameLength = $length;
 43     }
 44     while (true) {
 45         echo "\n№  НАЗВА" . str_repeat(" ", $maxNameLength - 5 + 2) . "ЦІНА\n";
 46         foreach ($products as $num => $item) {
 47             preg_match_all('/./us', $item['name'], $matches);
 48             $length = count($matches[0]);
 49             $padding = str_repeat(" ", $maxNameLength - $length + 2);
 50             printf("%-2d %s%s%d\n", $num, $item['name'], $padding, $item['price']);
 51         }
 52         echo "   -----------\n";
 53         echo "0  ПОВЕРНУТИСЯ\n";
 54         echo "Виберіть товар: ";
 55         $choice = trim(fgets(STDIN));
 56         if (!ctype_digit($choice)) {
 57             echo "ПОМИЛКА! ВВЕДІТЬ НОМЕР ТОВАРУ\n\n";
 58             continue;
 59         }
 60         $index = (int)$choice;
 61         if ($index === 0) break;
 62         if (!isset($products[$index])) {
 63             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
 64             continue;
 65         }
 66         $product = $products[$index];
 67         echo "Вибрано: {$product['name']}\n";
 68         echo "Введіть кількість, штук: ";
 69         $quantity = (int)trim(fgets(STDIN));
 70         if ($quantity < 0 || $quantity >= 100) {
 71             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНУ КІЛЬКІСТЬ ТОВАРУ\n\n";
 72             continue;
 73         }
 74         if ($quantity === 0) {
 75             unset($cart[$index]);
 76             echo "ВИДАЛЯЮ З КОШИКА\n";
 77         } else {
 78             $cart[$index] = $quantity;
 79         }
 80         echo "У КОШИКУ:\nНАЗВА" . str_repeat(" ", $maxNameLength - 5 + 2) . "КІЛЬКІСТЬ\n";
 81         foreach ($cart as $num => $qty) {
 82             $name = $products[$num]['name'];
 83             preg_match_all('/./us', $name, $matches);
 84             $length = count($matches[0]);
 85             $padding = str_repeat(" ", $maxNameLength - $length + 2);
 86             echo $name . $padding . $qty . "\n";
 87         }
 88         echo "\n";
 89     }
 90 }
 91 function showReceipt($products, $cart)
 92 {
 93     if (empty($cart)) {
 94         echo "КОШИК ПОРОЖНІЙ\n";
 95         return;
 96     }
 97     $maxNameLen = 5;
 98     $maxPriceLen = 4;
 99     $maxQtyLen = 9;
100     $maxSumLen = 8;
101     foreach ($cart as $num => $qty) {
102         $name = $products[$num]['name'];
103         $price = $products[$num]['price'];
104         $sum = $price * $qty;
105         preg_match_all('/./us', $name, $matches);
106         $nameLen = count($matches[0]);
107         $maxNameLen = max($maxNameLen, $nameLen);
108         $maxPriceLen = max($maxPriceLen, strlen((string)$price));
109         $maxQtyLen = max($maxQtyLen, strlen((string)$qty));
110         $maxSumLen = max($maxSumLen, strlen((string)$sum));
111     }
112     echo "№  НАЗВА"
113         . str_repeat(" ", $maxNameLen - 5 + 2)
114         . "ЦІНА" . str_repeat(" ", $maxPriceLen - 4 + 2)
115         . "КІЛЬКІСТЬ" . str_repeat(" ", $maxQtyLen - 9 + 2)
116         . "ВАРТІСТЬ\n";
117
118     $i = 1;
119     $total = 0;
120     foreach ($cart as $num => $qty) {
121         $name = $products[$num]['name'];
122         $price = $products[$num]['price'];
123         $sum = $price * $qty;
124         $total += $sum;
125         preg_match_all('/./us', $name, $matches);
126         $nameLen = count($matches[0]);
127         $namePad = str_repeat(" ", $maxNameLen - $nameLen + 2);
128         $pricePad = str_repeat(" ", $maxPriceLen - strlen((string)$price) + 2);
129         $qtyPad = str_repeat(" ", $maxQtyLen - strlen((string)$qty) + 2);
130         echo "$i  $name$namePad$price$pricePad$qty$qtyPad$sum\n";
131         $i++;
132     }
133     echo "РАЗОМ ДО СПЛАТИ: $total\n";
134 }
135
136 function setupProfile()
137 {
138     while (true) {
139         echo "Ваше імʼя: ";
140         $name = trim(fgets(STDIN));
141         $validCharacters = preg_match("/^[А-Яа-яЁёЇїІіЄєҐґA-Za-z'’\- ]+$/u", $name);
142         $containsLetter = preg_match("/[А-Яа-яЁёЇїІіЄєҐґA-Za-z]/u", $name);
143         if ($validCharacters && $containsLetter) break;
144         echo "ПОМИЛКА! Імʼя може містити лише літери, апостроф «'», дефіс «-», пробіл\n";
145     }
146     while (true) {
147         echo "Ваш вік: ";
148         $ageInput = trim(fgets(STDIN));
149         if (!is_numeric($ageInput)) {
150             echo "ПОМИЛКА! Вік має бути числом\n";
151             continue;
152         }
153         $age = (int)$ageInput;
154         if ($age >= 7 && $age <= 150) break;
155         echo "ПОМИЛКА! Користувач повинен мати вік від 7 та до 150 років\n";
156     }
157     echo "\n";
158 }
