Харківський національний університет радіоелектроніки

Факультет комп’ютерних наук

Кафедра програмної інженерії



Звіт
з лабораторної роботи № 3
з дисципліни: «Скриптові мови програмування»




Виконала:
ст. гр. ПЗПІ-23-2
Козодой О. Д.

Перевірив:
ст. викл. каф. ПІ
Сокорчук І. П.




Харків – 2025

1 ІСТОРІЯ ЗМІН

№ 	Дата	       Версія звіту   	Опис змін та виправлень
1 	24.05.2025	 0.1	            Створено розділи «Історія змін», «Завдання», «Опис виконаної роботи»
2 	27.05.2025	 0.2	            Створено розділ «Висновки» та оформлено додатки


2 ЗАВДАННЯ

     Метою лабораторної роботи є створення робочого вебсайту інтернет-магазину з використанням мови PHP та сесій для зберігання даних користувача. На сторінці товарів необхідно відобразити список доступних для покупки найменувань з можливістю вибрати кількість одиниць товарів і можливістю покласти обрані товари в кошик.
     На сторінці «Кошик» необхідно відобразити список обраних користувачем товарів (які були збережені у сесію). Якщо користувач ще не обрав жодного товару, то має бути відображений напис «Перейти до покупок» (посилання).


3 ОПИС ВИКОНАНОЇ РОБОТИ

     Веб-магазин "Весна" розроблено з використанням модульної архітектури, що забезпечує зручність супроводу та масштабованість системи. PHP виступає як основна серверна технологія для обробки HTTP-запитів, управління сесіями та взаємодії з базою даних, завдяки SQLite – системі управління базами даних.
     Проект складається з набору взаємопов'язаних PHP-скриптів та CSS-стилів, організованих за принципом прямої взаємодії з користувачем. Основні компоненти системи:
• db.php - модуль роботи з базою даних SQLite
• functions.php - бізнес-логіка та допоміжні функції
• index.php - головна сторінка магазину
• products.php - сторінка з каталогом товарів
• cart.php - сторінка кошика покупок
• pay.php - сторінка підтвердження покупки
• style.css - стилі оформлення для зручності сприйняття
     База даних SQLite зберігається у файлі shop.db та містить єдину таблицю products для зберігання інформації про товари.
     У файлі db.php реалізовано роботу з базою даних (див. додаток Б.2). Надається функція getPDO() для з'єднання з базою даних SQLite (shop.db) і створення таблиці продуктів.
     У файлі functions.php реалізовано функції, які забезпечують логіку взаємодії з масивом товарів та обчисленням вартості у кошику (див. додаток Б.5).
     Функція getProduct($id) повертає інформацію про товар за його ідентифікатором. Використовується ключове слово global для доступу до глобального масиву $products. Застосовується перевірка isset($products[$id]) для визначення наявності товару за заданим ID. Якщо товар знайдено — повертається його опис, інакше повертається null.
     Функція getCartTotal($cart) обчислює загальну суму замовлення, базуючись на вмісті кошика. Ініціалізується змінна $total зі значенням 0. За допомогою конструкції foreach відбувається ітерація по масиву $cart. Для кожного елементу кошика: отримується товар через getProduct($id); обчислюється підсумкова вартість ($product['price'] * $count); сума додається до загального підсумку. Повертається значення $total.
     Головна сторінка веб-магазину – index.php (див. додаток Б.3). Це сторінка, яка вітає користувача в магазині та надає посилання для переходу до сторінки покупок. Також реалізовано шапку сторінки з посиланнями на каталог продуктів та кошик. Дана шапка прописується для усіх головних сторінок.
     Файл products.php містить оголошення асоціативного масиву $products, який є центральним елементом даних для усієї веб-програми (див. додаток Б.4). Масив виконує роль локального "каталогу товарів", де кожен елемент описує один товар.
     Реалізовано оновлення кількості товарів у кошику (через update_cart), а не просте додавання. Підтримується збереження поточних значень у кошику — користувач бачить, скільки одиниць товару вже додано. Всі дані екрануються через htmlspecialchars() для безпеки (XSS-захист).
     Файл cart.php реалізує відображення кошика покупця у веб-магазині (див. додаток Б.1). Реалізовано можливість користувачу: видалити товар з кошика; повністю очистити кошик; перейти до оплати. Відображає інформацію в зручному та зрозумілому вигляді, автоматично враховуючи стан кошика. Всі дії відбуваються через POST, і змінні перевіряються через isset().
     Сторінка завершення покупки – pay.php – очищає кошик після успішної покупки та виводить повідомлення подяки (див. додаток Б.6).
     Сторінка отримує поточний кошик функцією get_cart(). Якщо кошик порожній — перенаправляє користувача назад на сторінку товарів (products.php). Якщо кошик не порожній — викликає clear_cart(), щоб очистити сесію. Основна частина виводить повідомлення "Дякуємо за покупку!" і посилання на повернення до товарів.

4 ВИСНОВКИ

     У ході виконання даної роботи було розроблено простий, функціональний веб-магазин із підтримкою кошика. Реалізовано можливість завантаження товарів із бази даних, додавання їх до кошика, змінення кількості, видалення окремих позицій, очищення кошика та переходу до оплати. Інтерфейс користувача створено з урахуванням базових принципів зручності: навігаційне меню, повідомлення про помилки та підтвердження дій.
     Основна логіка винесена в окремі функції, що підвищує гнучкість і зручність підтримки коду. Робота демонструє практичне використання PHP, сесій, роботи з базами даних через PDO, а також обробки форм і динамічного виведення даних. Така структура є гарною основою для подальшого розширення функціоналу інтернет-магазину.


ДОДАТОК А
Відеозапис

Відеозапис презентації результатів лабораторної роботи: https://youtu.be/FJwnrSBa7pk 

Хронологічний опис відеозапису:

00:00 – Вступ
00:29 – Логіка підключення бази даних
01:25 – Огляд головних функцій
03:35 – Опис сторінки для вибору товарів
04:40 – Опис сторінки відображення кошика
06:00 – Опис сторінки успішної оплати
06:20 – Опис привітальної сторінки
06:48 – Демонстрація роботи веб-сайту


ДОДАТОК Б
Програмний код
Б.1 Файл cart.php

GitHub репозиторій: https://github.

  1 <?php
  2 include 'functions.php';
  3 require_once 'db.php';
  4
  5 $pdo = getPDO();
  6 $stmt = $pdo->query("SELECT * FROM products");
  7 $products = [];
  8 while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
  9     $products[$row['id']] = [
 10         'name' => $row['name'],
 11         'price' => $row['price']
 12     ];
 13 }
 14
 15 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
 16     if (isset($_POST['remove_id'])) {
 17         remove_from_cart($_POST['remove_id']);
 18     }
 19     elseif (isset($_POST['clear_cart'])) {
 20         clear_cart();
 21         header('Location: products.php');
 22         exit;
 23     }
 24 }
 25 $cart = get_cart();
 26 ?>
 27
 28 <!DOCTYPE html>
 29 <html lang="uk">
 30 <head>
 31     <meta charset="UTF-8">
 32     <title>Кошик</title>
 33     <link rel="stylesheet" href="style.css">
 34 </head>
 35 <body>
 36     <header>
 37         <nav style="text-align: center;">
 38             <a href="index.php">Home</a> |
 39             <a href="products.php">Products</a> |
 40             <a href="cart.php">Cart</a>
 41         </nav>
 42     </header>
 43
 44     <main style="text-align: center; padding: 20px;">
 45         <h1>Кошик</h1>
 46
 47         <?php if (empty($cart)): ?>
 48             <p style="font-size: 1.2em;">Кошик порожній</a></p>
 49             <p style="font-size: 1.2em;"><a href="products.php">Перейти до покупок</a></p>
 50         <?php else: ?>
 51             <?= render_cart_table($cart, $products) ?>
 52             <div style="margin-top: 20px;">
 53                 <form action="" method="post" style="display: inline;">
 54                     <input type="hidden" name="clear_cart" value="1">
 55                     <button type="submit">Скасувати</button>
 56                 </form>
 57                 <form action="pay.php" method="post" style="display: inline;">
 58                     <button type="submit">Оплатити</button>
 59                 </form>
 60             </div>
 61         <?php endif; ?>
 62     </main>
 63
 64     <footer>
 65         <hr>
 66         <nav style="text-align: center;">
 67             <a href="index.php">Home</a> |
 68             <a href="products.php">Products</a> |
 69             <a href="cart.php">Cart</a> |
 70             <a href="#">About Us</a>
 71         </nav>
 72     </footer>
 73 </body>
 74 </html>


Б.2 Файл db.php

GitHub репозиторій: https://github.

  1 <?php
  2 function getPDO() {
  3     try {
  4         $pdo = new PDO('sqlite:shop.db');
  5         $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  6
  7         $pdo->exec("CREATE TABLE IF NOT EXISTS products (
  8             id INTEGER PRIMARY KEY AUTOINCREMENT,
  9             name TEXT NOT NULL,
 10             price DECIMAL(10,2) NOT NULL
 11         )");
 12
 13         $stmt = $pdo->query("SELECT COUNT(*) FROM products");
 14         $count = $stmt->fetchColumn();
 15
 16         if ($count == 0) {
 17             $pdo->exec("INSERT INTO products (name, price) VALUES
 18                 ('Молоко пастеризоване', 12),
 19                 ('Хліб чорний', 9),
 20                 ('Сир білий', 21),
 21                 ('Сметана 20%', 25),
 22                 ('Кефір 1%', 19),
 23                 ('Вода газована', 18),
 24                 ('Печиво \"Весна\"', 14)
 25             ");
 26         }
 27
 28         return $pdo;
 29     } catch (PDOException $e) {
 30         die("Database connection failed: " . $e->getMessage());
 31     }
 32 }
 33 ?>


Б.3 Файл index.php

GitHub репозиторій: https://github.

  1 <?php
  2 include 'functions.php';
  3 require_once 'db.php';
  4
  5 $pdo = getPDO();
  6 $stmt = $pdo->query('SELECT * FROM products');
  7 $products = [];
  8 while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
  9     $products[$row['id']] = [
 10         'name' => $row['name'],
 11         'price' => $row['price']
 12     ];
 13 }
 14
 15 ?>
 16
 17 <!DOCTYPE html>
 18 <html lang="uk">
 19 <head>
 20     <meta charset="UTF-8">
 21     <title>Web-магазин - Головна</title>
 22     <link rel="stylesheet" href="style.css">
 23 </head>
 24 <body>
 25     <header>
 26         <nav>
 27             <a href="index.php">Home</a> |
 28             <a href="products.php">Products</a> |
 29             <a href="cart.php">Cart</a>
 30         </nav>
 31     </header>
 32
 33     <main>
 34         <h1>Ласкаво просимо до веб-магазину "Весна"</h1>
 35         <p><a href="products.php">Перейти до покупок</a></p>
 36     </main>
 37
 38     <footer>
 39         <hr>
 40         <nav>
 41             <a href="index.php">Home</a> |
 42             <a href="products.php">Products</a> |
 43             <a href="cart.php">Cart</a> |
 44             <a href="#">About Us</a>
 45         </nav>
 46     </footer>
 47 </body>
 48 </html>


Б.4 Файл products.php

GitHub репозиторій: https://github.

  1 <?php
  2 include 'functions.php';
  3 require_once 'db.php';
  4
  5 $pdo = getPDO();
  6 $stmt = $pdo->query('SELECT * FROM products');
  7 $products = [];
  8 while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
  9     $products[$row['id']] = [
 10         'name' => $row['name'],
 11         'price' => $row['price']
 12     ];
 13 }
 14
 15 $error = false;
 16 $cart = get_cart();
 17
 18 if ($_SERVER["REQUEST_METHOD"] === "POST") {
 19     $validItems = validateCartData($_POST, $products);
 20     if (!empty($validItems) && array_sum($validItems) > 0) {
 21         update_cart($validItems);
 22         header('Location: cart.php');
 23         exit;
 24     } else {
 25         $error = "Помилка! Визначте правильну кількість.";
 26     }
 27 }
 28 ?>
 29
 30 <!DOCTYPE html>
 31 <html lang="uk">
 32 <head>
 33     <meta charset="UTF-8">
 34     <title>Web-магазин - Товари</title>
 35     <link rel="stylesheet" href="style.css">
 36 </head>
 37 <body>
 38     <header>
 39         <nav>
 40             <a href="index.php">Home</a> |
 41             <a href="products.php">Products</a> |
 42             <a href="cart.php">Cart</a>
 43         </nav>
 44     </header>
 45
 46     <main>
 47         <h1>Оберіть товари</h1>
 48
 49         <?php if ($error): ?>
 50             <p style="color: red;"><?= htmlspecialchars($error) ?></p>
 51         <?php endif; ?>
 52
 53         <form method="POST" action="products.php">
 54             <table>
 55                 <?php foreach ($products as $id => $product): ?>
 56                     <tr>
 57                         <td><img src="https://via.placeholder.com/50"></td>
 58                         <td><strong><?= htmlspecialchars($product['name']) ?></strong></td>
 59                         <td>
 60                             <input type="number" name="<?= $id ?>" value="<?= isset($cart[$id]) ? $cart[$id] : 0 ?>" min="0">    
 61                             <?php if (isset($cart[$id])): ?>
 62                                 <br><small style="color: #28a745;">В кошику: <?= $cart[$id] ?></small>
 63                             <?php endif; ?>
 64                         </td>
 65                         <td><?= $product['price'] ?> грн</td>
 66                     </tr>
 67                 <?php endforeach; ?>
 68             </table>
 69             <br>
 70             <button type="submit">Додати до кошика</button>
 71         </form>
 72     </main>
 73
 74     <footer>
 75         <hr>
 76         <nav>
 77             <a href="index.php">Home</a> |
 78             <a href="products.php">Products</a> |
 79             <a href="cart.php">Cart</a> |
 80             <a href="#">About Us</a>
 81         </nav>
 82     </footer>
 83 </body>
 84 </html>


Б.5 Файл functions.php

GitHub репозиторій: https://github.

  1 <?php
  2 session_start();
  3
  4 function add_to_cart($newItems) {
  5     $existingCart = $_SESSION['cart'] ?? [];
  6
  7     foreach ($newItems as $productId => $quantity) {
  8         if (isset($existingCart[$productId])) {
  9             $existingCart[$productId] += $quantity;
 10         } else {
 11             $existingCart[$productId] = $quantity;
 12         }
 13     }
 14
 15     $_SESSION['cart'] = $existingCart;
 16 }
 17
 18 function update_cart($items) {
 19     $cart = $_SESSION['cart'] ?? [];
 20
 21     foreach ($items as $productId => $quantity) {
 22         if ($quantity == 0) {
 23             if (isset($cart[$productId])) {
 24                 unset($cart[$productId]);
 25             }
 26         } else {
 27             $cart[$productId] = $quantity;
 28         }
 29     }
 30
 31     $_SESSION['cart'] = $cart;
 32 }
 33
 34 function get_cart() {
 35     return $_SESSION['cart'] ?? [];
 36 }
 37
 38 function remove_from_cart($id) {
 39     if (isset($_SESSION['cart'][$id])) {
 40         unset($_SESSION['cart'][$id]);
 41     }
 42 }
 43
 44 function clear_cart() {
 45     unset($_SESSION['cart']);
 46 }
 47
 48 function render_cart_table($cart, $products) {
 49     $html = '<table border="1" cellpadding="10" cellspacing="0" style="margin: 0 auto;">';
 50     $html .= '<tr><th>ID</th><th>Назва</th><th>Ціна</th><th>Кількість</th><th>Сума</th><th>Дія</th></tr>';
 51
 52     $total = 0;
 53     foreach ($cart as $id => $count) {
 54         if (!isset($products[$id])) continue;
 55
 56         $name = htmlspecialchars($products[$id]['name']);
 57         $price = $products[$id]['price'];
 58         $sum = $price * $count;
 59         $total += $sum;
 60
 61         $html .= "<tr>
 62                     <td>{$id}</td>
 63                     <td>{$name}</td>
 64                     <td>{$price} грн</td>
 65                     <td>{$count}</td>
 66                     <td>{$sum} грн</td>
 67                     <td>
 68                         <form method='POST' style='display:inline'>
 69                             <input type='hidden' name='remove_id' value='{$id}'>
 70                             <button type='submit'>🗑️</button>
 71                         </form>
 72                     </td>
 73                   </tr>";
 74     }
 75
 76     $html .= "<tr>
 77                 <td colspan='4'><strong>Усього</strong></td>
 78                 <td><strong>{$total} грн</strong></td>
 79                 <td></td>
 80               </tr>";
 81     $html .= '</table>';
 82
 83     return $html;
 84 }
 85
 86 function validateCartData($postData, $productList) {
 87     $validItems = [];
 88
 89     foreach ($productList as $key => $product) {
 90         if (isset($postData[$key]) && is_numeric($postData[$key])) {
 91             $quantity = (int)$postData[$key];
 92             if ($quantity >= 0) {
 93                 $validItems[$key] = $quantity;
 94             }
 95         }
 96     }
 97
 98     return $validItems;
 99 }
100 ?>

Б.6 Файл pay.php

GitHub репозиторій: https://github.

  1 <?php
  2 include 'functions.php';
  3
  4 $cart = get_cart();
  5
  6 if (empty($cart)) {
  7     header('Location: products.php');
  8     exit;
  9 }
 10
 11 clear_cart();
 12 ?>
 13
 14 <!DOCTYPE html>
 15 <html lang="uk">
 16 <head>
 17     <meta charset="UTF-8">
 18     <title>Оплата успішна</title>
 19     <link rel="stylesheet" href="style.css">
 20 </head>
 21 <body>
 22     <header>
 23         <nav style="text-align: center;">
 24             <a href="index.php">Home</a> |
 25             <a href="products.php">Products</a> |
 26             <a href="cart.php">Cart</a>
 27         </nav>
 28     </header>
 29
 30     <main style="text-align: center; padding: 20px;">
 31         <h1>Дякуємо за покупку!</h1>
 32         <p>Ваше замовлення успішно оформлено.</p>
 33         <p><a href="products.php">Повернутися до покупок</a></p>
 34     </main>
 35
 36     <footer>
 37         <hr>
 38         <nav style="text-align: center;">
 39             <a href="index.php">Home</a> |
 40             <a href="products.php">Products</a> |
 41             <a href="cart.php">Cart</a> |
 42             <a href="#">About Us</a>
 43         </nav>
 44     </footer>
 45 </body>
 46 </html>
