<?php
session_start();

function validateCartData($postData, $productList) {
    $validItems = [];

    foreach ($productList as $key => $product) {
        if (isset($postData[$key]) && is_numeric($postData[$key])) {
            $quantity = (int)$postData[$key];
            if ($quantity >= 0) { // –ó–º—ñ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä –¥–æ–∑–≤–æ–ª—è—î–º–æ 0
                $validItems[$key] = $quantity;
            }
        }
    }

    return $validItems;
}

function add_to_cart($newItems) {
    // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –∫–æ—à–∏–∫ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
    $existingCart = $_SESSION['cart'] ?? [];
    
    // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏ –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—à–∏–∫–∞
    foreach ($newItems as $productId => $quantity) {
        if (isset($existingCart[$productId])) {
            // –Ø–∫—â–æ —Ç–æ–≤–∞—Ä –≤–∂–µ —î –≤ –∫–æ—à–∏–∫—É, –∑–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
            $existingCart[$productId] += $quantity;
        } else {
            // –Ø–∫—â–æ —Ç–æ–≤–∞—Ä—É –Ω–µ–º–∞—î, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
            $existingCart[$productId] = $quantity;
        }
    }
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ—à–∏–∫
    $_SESSION['cart'] = $existingCart;
}

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—à–∏–∫—É
function update_cart($items) {
    // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å–Ω—É—é—á–∏–π –∫–æ—à–∏–∫ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
    $cart = $_SESSION['cart'] ?? [];
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤
    foreach ($items as $productId => $quantity) {
        if ($quantity == 0) {
            // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å 0, –≤–∏–¥–∞–ª—è—î–º–æ —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞
            if (isset($cart[$productId])) {
                unset($cart[$productId]);
            }
        } else {
            // –Ü–Ω–∞–∫—à–µ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
            $cart[$productId] = $quantity;
        }
    }
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ—à–∏–∫
    $_SESSION['cart'] = $cart;
}

function get_cart() {
    return $_SESSION['cart'] ?? [];
}

function remove_from_cart($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

function clear_cart() {
    unset($_SESSION['cart']);
}

function render_cart_table($cart, $products) {
    $html = '<table border="1" cellpadding="10" cellspacing="0" style="margin: 0 auto;">';
    $html .= '<tr><th>ID</th><th>–ù–∞–∑–≤–∞</th><th>–¶—ñ–Ω–∞</th><th>–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th><th>–°—É–º–∞</th><th>–î—ñ—è</th></tr>';

    $total = 0;
    foreach ($cart as $id => $count) {
        if (!isset($products[$id])) continue;

        $name = htmlspecialchars($products[$id]['name']);
        $price = $products[$id]['price'];
        $sum = $price * $count;
        $total += $sum;

        $html .= "<tr>
                    <td>{$id}</td>
                    <td>{$name}</td>
                    <td>{$price} –≥—Ä–Ω</td>
                    <td>{$count}</td>
                    <td>{$sum} –≥—Ä–Ω</td>
                    <td>
                        <form method='POST' style='display:inline'>
                            <input type='hidden' name='remove_id' value='{$id}'>
                            <button type='submit'>üóëÔ∏è</button>
                        </form>
                    </td>
                  </tr>";
    }

    $html .= "<tr>
                <td colspan='4'><strong>–£—Å—å–æ–≥–æ</strong></td>
                <td><strong>{$total} –≥—Ä–Ω</strong></td>
                <td></td>
              </tr>";
    $html .= '</table>';

    return $html;
}
?>
