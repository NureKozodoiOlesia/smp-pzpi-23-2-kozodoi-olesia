Харківський національний університет радіоелектроніки

Факультет комп’ютерних наук

Кафедра програмної інженерії



Звіт
з лабораторної роботи № 4
з дисципліни: «Скриптові мови програмування»




Виконала:
ст. гр. ПЗПІ-23-2
Козодой О. Д.

Перевірив:
ст. викл. каф. ПІ
Сокорчук І. П.




Харків – 2025

1 ІСТОРІЯ ЗМІН

№ 	Дата	       Версія звіту   	Опис змін та виправлень
1 	30.05.2025	 0.1	            Створено розділи «Історія змін», «Завдання», «Опис виконаної роботи»
2 	31.05.2025	 0.2	            Створено розділ «Висновки» та оформлено додатки


2 ЗАВДАННЯ

     Необхідно розширити функціонал інтернет-магазину шляхом впровадження системи автентифікації та персоналізації. Реалізувати централізовану маршрутизацію через index.php з параметром page, усунувши дублювання HTML-структури за допомогою динамічних шаблонів (header.php/footer.php). Додати сторінку входу з валідацією облікових даней, обмеживши доступ до кошика та товарів неавторизованим користувачам (перенаправлення на page404.php). Розробити профільну сторінку з функціоналом оновлення персональних даних віковою перевіркою та завантаженням фото з обмеженням розміру і формату. Забезпечити збереження профілю у JSON-файлі з автоматичним видаленням застарілих фотографій.

3 ОПИС ВИКОНАНОЇ РОБОТИ

     Проект представляє собою покращений веб-додаток для інтернет-магазину, який було розроблено на минулій лабораторній роботі. Система побудована на PHP з використанням сесій для зберігання тимчасових даних кошика та файлової системи для збереження інформації профілю. Логіку деяких файлів було залишено з попередньої роботи (додатки Б.1, Б.2, Б.4, Б.5) 
     Файл index.php став центральним маршрутизатором системи, який аналізує параметр page з GET-запиту для динамічного підключення відповідних модулів (див. додаток Б.3). Використання switch дозволяє зберігати чистоту коду та уникнути множинних умовних переходів. Файл відповідає за ініціалізацію заголовків сторінок через змінну $pageTitle та забезпечує цілісність HTML-структури через підключення footer.php.
     Файл home.php реалізує адаптивну головну сторінку з динамічним контентом. Для авторизованих користувачів відображається персоналізоване привітання з ім'ям та посилання на товари, тоді як гостям пропонується форма входу. Використання $_SESSION['user_login'] забезпечує персоніфікований досвід без необхідності постійного повторного введення даних.
  1 <h1>Ласкаво просимо до веб-магазину "Весна"</h1>
  2 
  3 <?php if (isset($_SESSION['user_login'])): ?>
  4     <p style="font-size: 1.2em;">Привіт, <?= htmlspecialchars($_SESSION['user_login']) ?>!</p>
  5     <p><a href="index.php?page=products">Перейти до покупок</a></p>
  6 <?php else: ?>
  7     <p style="font-size: 1.2em;">Для перегляду товарів, будь ласка, увійдіть до системи</p>
  8     <p><a href="index.php?page=login">Увійти</a></p>
  9 <?php endif; ?>
     Файл credentials.php містить статичні облікові дані для демонстрації автентифікації. 
  1 <?php
  2 $credentials = array(
  3     'userName' => 'Test',
  4     'password' => '123123'
  5 );
  6 ?>
     Файл footer.php оновлено для відображення контекстно-залежної навігації. Умовна конструкція <?php if ($isLoggedIn): ?> приховує посилання на кошик і профіль для неавторизованих користувачів. 
  1 <footer>
  2         <hr>
  3         <nav style="text-align: center; padding: 10px 0;">
  4             <a href="index.php?page=home">Головна</a> |
  5             <?php if ($isLoggedIn): ?>
  6                 <a href="index.php?page=products">Товари</a> |
  7                 <a href="index.php?page=cart">Кошик</a> |
  8                 <a href="index.php?page=profile">Профіль</a> |
  9             <?php endif; ?>
 10             <a href="#">Про нас</a>
 11         </nav>
 12     </footer>
 13 </body>
 14 </html>
     Код файлу header.php наведено в додатку Б.7. Автоматичний старт сесії через session_status() запобігає помилкам ініціалізації. Динамічний заголовок сторінки <?= isset($pageTitle) ? ... : '...' ?> підвищує SEO-оптимізацію. Навігаційне меню тепер включає ім'я користувача та кнопку виходу, що покращує орієнтацію в системі.
     Файл profile.php реалізує розширений профіль користувача зі збереженням даних у JSON-файлі та можливістю завантаження фото (див. додаток Б.6). Система включає валідацію вхідних даних: перевірку мінімального віку (16+), формату імені/прізвища (тільки літери), обов'язкові поля та мінімальну довжину опису (50 символів). Фото профілю зберігається у папці uploads з обмеженням розміру до 5MB та підтримкою JPG/PNG/GIF, при цьому старе зображення автоматично видаляється при оновленні. Форма відображає поточні дані користувача, включаючи попередньо завантажену фотографію з прев'ю 150x150px, та надає зворотній зв'язок через кольорові повідомлення про помилки або успішне збереження.
     Файл login.php реалізує безпечну форму автентифікації з валідацією вхідних даних (див. додаток Б.8). Використання htmlspecialchars() при виведенні помилок запобігає XSS-атакам. Стилізована таблична структура форми забезпечує кросплатформову сумісність. Тестові дані у виділеному блоці спрощують процес тестування для користувачів.
     Файл logout.php виконує коректне завершення сесії через unset() для всіх пов'язаних змінних та перенаправляє на головну сторінку.
  1 <?php
  2 session_start();
  3 unset($_SESSION['user_login']);
  4 unset($_SESSION['login_time']);
  5 header('Location: index.php?page=home');
  6 exit;
  7 ?>
     Файл page404.php служить сторінкою помилки 404 з інтуїтивно зрозумілими кнопками дій. Червоний колір тексту та кнопка з закликом до автентифікації ефективно направляють користувачів на потрібні дії. 
  1 <h1>Доступ обмежено</h1>
  2 <p style="font-size: 1.2em; color: #d9534f;">
  3     Для перегляду контенту сайту необхідно пройти авторизацію.
  4 </p>
  5 <p style="margin-top: 30px;">
  6     <a href="index.php?page=login" style="background-color: #007BFF; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
  7         Увійти до системи
  8     </a>
  9 </p>
 10 <p style="margin-top: 20px;">
 11     <a href="index.php?page=home">Повернутися на головну</a>
 12 </p>
     

4 ВИСНОВКИ

     У ході лабораторної роботи було створено повноцінну систему автентифікації з сесійним керуванням та динамічною навігацією. Реалізовано віковий фільтр (16+ років) через аналіз дати народження, що відповідає вимогам для обробки персональних даних неповнолітніх. Модуль завантаження фото демонструє роботу з файловою системою PHP. Використання JSON для зберігання профілю спростило роботу зі структурованими даними без залежності від СУБД.


ДОДАТОК А
Відеозапис

Відеозапис презентації результатів лабораторної роботи: https://youtu.be/LLzuWMfCtQY 

Хронологічний опис відеозапису:

00:00 – Вступ
00:35 – Файл підключення бази даних
00:48 – Опис навігації сайту
02:06 – Огляд шапки та підвалу сайту
02:39 – Опис логіки авторизації користувача
04:19 – Незмінні сторінки з минулої роботи
05:02 – Опис сторінки з профілем користувача
07:18 – Демонстрація роботи веб-сайту


ДОДАТОК Б
Програмний код
Б.1 Файл cart.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/cart.php 

  1 <?php
  2 $pdo = getPDO();
  3 $stmt = $pdo->query("SELECT * FROM products");
  4 $products = [];
  5 while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
  6     $products[$row['id']] = [
  7         'name' => $row['name'],
  8         'price' => $row['price']
  9     ];
 10 }
 11 
 12 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
 13     if (isset($_POST['remove_id'])) {
 14         remove_from_cart($_POST['remove_id']);
 15     }
 16     elseif (isset($_POST['clear_cart'])) {
 17         clear_cart();
 18         header('Location: index.php?page=products');
 19         exit;
 20     }
 21     elseif (isset($_POST['pay'])) {
 22         $cart = get_cart();
 23         if (!empty($cart)) {
 24             clear_cart();
 25             echo '<h1>Дякуємо за покупку!</h1>';
 26             echo '<p>Ваше замовлення успішно оформлено.</p>';
 27             echo '<p><a href="index.php?page=products">Повернутися до покупок</a></p>';
 28             return;
 29         }
 30     }
 31 }
 32
 33 $cart = get_cart();
 34 ?>
 35
 36 <h1>Кошик</h1>
 37
 38 <?php if (empty($cart)): ?>
 39     <p style="font-size: 1.2em;">Кошик порожній</p>
 40     <p style="font-size: 1.2em;"><a href="index.php?page=products">Перейти до покупок</a></p>
 41 <?php else: ?>
 42     <?= render_cart_table($cart, $products) ?>
 43     <div style="margin-top: 20px;">
 44         <form action="index.php?page=cart" method="post" style="display: inline;">
 45             <input type="hidden" name="clear_cart" value="1">
 46             <button type="submit">Скасувати</button>
 47         </form>
 48         <form action="index.php?page=cart" method="post" style="display: inline;">
 49             <input type="hidden" name="pay" value="1">
 50             <button type="submit">Оплатити</button>
 51         </form>
 52     </div>
 53 <?php endif; ?>


Б.2 Файл db.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/db.php 

  1 <?php
  2 function getPDO() {
  3     try {
  4         $pdo = new PDO('sqlite:shop.db');
  5         $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  6
  7         $pdo->exec("CREATE TABLE IF NOT EXISTS products (
  8             id INTEGER PRIMARY KEY AUTOINCREMENT,
  9             name TEXT NOT NULL,
 10             price DECIMAL(10,2) NOT NULL
 11         )");
 12
 13         $stmt = $pdo->query("SELECT COUNT(*) FROM products");
 14         $count = $stmt->fetchColumn();
 15
 16         if ($count == 0) {
 17             $pdo->exec("INSERT INTO products (name, price) VALUES
 18                 ('Молоко пастеризоване', 12),
 19                 ('Хліб чорний', 9),
 20                 ('Сир білий', 21),
 21                 ('Сметана 20%', 25),
 22                 ('Кефір 1%', 19),
 23                 ('Вода газована', 18),
 24                 ('Печиво \"Весна\"', 14)
 25             ");
 26         }
 27
 28         return $pdo;
 29     } catch (PDOException $e) {
 30         die("Database connection failed: " . $e->getMessage());
 31     }
 32 }
 33 ?>


Б.3 Файл index.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/index.php 

  1 <?php
  2 include 'functions.php';
  3 require_once 'db.php';
  4 
  5 if (session_status() == PHP_SESSION_NONE) {
  6     session_start();
  7 }
  8 
  9 $isLoggedIn = isset($_SESSION['user_login']) && isset($_SESSION['login_time']);
 10 $page = $_GET['page'] ?? 'home';
 11 
 12 // Перевірка авторизації для захищених сторінок
 13 $protectedPages = ['products', 'cart', 'profile'];
 14 if (in_array($page, $protectedPages) && !$isLoggedIn) {
 15     $page = 'page404';
 16 }
 17
 18 require_once 'header.php';
 19
 20 echo '<main style="text-align: center; padding: 20px;">';
 21
 22 switch ($page) {
 23     case "cart":
 24         $pageTitle = "Кошик";
 25         require_once "cart.php";
 26         break;
 27     case "profile":
 28         $pageTitle = "Профіль";
 29         require_once "profile.php";
 30         break;
 31     case "products":
 32         $pageTitle = "Товари";
 33         require_once "products.php";
 34         break;
 35     case "login":
 36         $pageTitle = "Вхід";
 37         require_once "login.php";
 38         break;
 39     case "home":
 40         $pageTitle = "Головна";
 41         require_once "home.php";
 42         break;
 43     default:
 44         $pageTitle = "404";
 45         require_once "page404.php";
 46         break;
 47 }
 48
 49 echo '</main>';
 50
 51 require_once 'footer.php';
 52 ?>


Б.4 Файл products.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/products.php 

  1 <?php
  2 $pdo = getPDO();
  3 $stmt = $pdo->query('SELECT * FROM products');
  4 $products = [];
  5 while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
  6     $products[$row['id']] = [
  7         'name' => $row['name'],
  8         'price' => $row['price']
  9     ];
 10 }
 11
 12 $error = false;
 13 $cart = get_cart();
 14
 15 if ($_SERVER["REQUEST_METHOD"] === "POST") {
 16     $validItems = validateCartData($_POST, $products);
 17     if (!empty($validItems) && array_sum($validItems) > 0) {
 18         update_cart($validItems);
 19         header('Location: index.php?page=cart');
 20         exit;
 21     } else {
 22         $error = "Помилка! Визначте правильну кількість.";
 23     }
 24 }
 25 ?>
 26
 27 <h1>Оберіть товари</h1>
 28
 29 <?php if ($error): ?>
 30     <p style="color: red;"><?= htmlspecialchars($error) ?></p>
 31 <?php endif; ?>
 32
 33 <form method="POST" action="index.php?page=products">
 34     <table style="margin: 0 auto;">
 35         <?php foreach ($products as $id => $product): ?>
 36             <tr>
 37                 <td><img src="https://via.placeholder.com/50"></td>
 38                 <td><strong><?= htmlspecialchars($product['name']) ?></strong></td>
 39                 <td>
 40                     <input type="number" name="<?= $id ?>" value="<?= isset($cart[$id]) ? $cart[$id] : 0 ?>" min="0" style="width: 60px;">
 41                     <?php if (isset($cart[$id])): ?>
 42                         <br><small style="color: #28a745;">В кошику: <?= $cart[$id] ?></small>
 43                     <?php endif; ?>
 44                 </td>
 45                 <td><?= $product['price'] ?> грн</td>
 46             </tr>
 47         <?php endforeach; ?>
 48     </table>
 49     <br>
 50     <button type="submit">Додати до кошика</button>
 51 </form>


Б.5 Файл functions.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/functions.php 

  1 <?php
  2 session_start();
  3
  4 function add_to_cart($newItems) {
  5     $existingCart = $_SESSION['cart'] ?? [];
  6
  7     foreach ($newItems as $productId => $quantity) {
  8         if (isset($existingCart[$productId])) {
  9             $existingCart[$productId] += $quantity;
 10         } else {
 11             $existingCart[$productId] = $quantity;
 12         }
 13     }
 14
 15     $_SESSION['cart'] = $existingCart;
 16 }
 17
 18 function update_cart($items) {
 19     $cart = $_SESSION['cart'] ?? [];
 20
 21     foreach ($items as $productId => $quantity) {
 22         if ($quantity == 0) {
 23             if (isset($cart[$productId])) {
 24                 unset($cart[$productId]);
 25             }
 26         } else {
 27             $cart[$productId] = $quantity;
 28         }
 29     }
 30
 31     $_SESSION['cart'] = $cart;
 32 }
 33
 34 function get_cart() {
 35     return $_SESSION['cart'] ?? [];
 36 }
 37
 38 function remove_from_cart($id) {
 39     if (isset($_SESSION['cart'][$id])) {
 40         unset($_SESSION['cart'][$id]);
 41     }
 42 }
 43
 44 function clear_cart() {
 45     unset($_SESSION['cart']);
 46 }
 47
 48 function render_cart_table($cart, $products) {
 49     $html = '<table border="1" cellpadding="10" cellspacing="0" style="margin: 0 auto;">';
 50     $html .= '<tr><th>ID</th><th>Назва</th><th>Ціна</th><th>Кількість</th><th>Сума</th><th>Дія</th></tr>';
 51
 52     $total = 0;
 53     foreach ($cart as $id => $count) {
 54         if (!isset($products[$id])) continue;
 55
 56         $name = htmlspecialchars($products[$id]['name']);
 57         $price = $products[$id]['price'];
 58         $sum = $price * $count;
 59         $total += $sum;
 60
 61         $html .= "<tr>
 62                     <td>{$id}</td>
 63                     <td>{$name}</td>
 64                     <td>{$price} грн</td>
 65                     <td>{$count}</td>
 66                     <td>{$sum} грн</td>
 67                     <td>
 68                         <form method='POST' style='display:inline'>
 69                             <input type='hidden' name='remove_id' value='{$id}'>
 70                             <button type='submit'>🗑️</button>
 71                         </form>
 72                     </td>
 73                   </tr>";
 74     }
 75
 76     $html .= "<tr>
 77                 <td colspan='4'><strong>Усього</strong></td>
 78                 <td><strong>{$total} грн</strong></td>
 79                 <td></td>
 80               </tr>";
 81     $html .= '</table>';
 82
 83     return $html;
 84 }
 85
 86 function validateCartData($postData, $productList) {
 87     $validItems = [];
 88
 89     foreach ($productList as $key => $product) {
 90         if (isset($postData[$key]) && is_numeric($postData[$key])) {
 91             $quantity = (int)$postData[$key];
 92             if ($quantity >= 0) {
 93                 $validItems[$key] = $quantity;
 94             }
 95         }
 96     }
 97     return $validItems;
 98 } ?>

Б.6 Файл profile.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/profile.php 

  1 <?php
  2 $profileFile = 'user_profile.json';
  3 $uploadDir = 'uploads/';
  4 
  5 if (!is_dir($uploadDir)) {
  6     mkdir($uploadDir, 0777, true);
  7 }
  8 
  9 $profileData = [];
 10 if (file_exists($profileFile)) {
 11     $profileData = json_decode(file_get_contents($profileFile), true) ?: [];
 12 }
 13 
 14 $error = '';
 15 $success = '';
 16 
 17 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
 18     $name = trim($_POST['name'] ?? '');
 19     $surname = trim($_POST['surname'] ?? '');
 20     $birthDate = $_POST['birth_date'] ?? '';
 21     $description = trim($_POST['description'] ?? '');
 22
 23     if (empty($name) || empty($surname) || empty($birthDate) || empty($description)) {
 24         $error = 'Всі поля обов\'язкові для заповнення';
 25     } elseif (strlen($name) < 2 || strlen($surname) < 2) {
 26         $error = 'Ім\'я та прізвище повинні містити більше одного символу';
 27     } elseif (!preg_match('/^[a-zA-Zа-яА-ЯїЇєЄіІ\s]+$/u', $name) || !preg_match('/^[a-zA-Zа-яА-ЯїЇєЄіІ\s]+$/u', $surname)) {     
 28         $error = 'Ім\'я та прізвище повинні містити тільки літери';
 29     } elseif (strlen($description) < 50) {
 30         $error = 'Стисла інформація повинна містити не менше 50 символів';
 31     } else {
 32         // Перевірка віку
 33         $birthDateTime = DateTime::createFromFormat('Y-m-d', $birthDate);
 34         if (!$birthDateTime) {
 35             $error = 'Неправильний формат дати народження';
 36         } else {
 37             $now = new DateTime();
 38             $age = $now->diff($birthDateTime)->y;
 39
 40             if ($age < 16) {
 41                 $error = 'Користувачеві має бути не менше 16 років';
 42             } else {
 43                 $photoPath = $profileData['photo'] ?? '';
 44
 45                 if (isset($_FILES['photo']) && $_FILES['photo']['error'] === UPLOAD_ERR_OK) {
 46                     $allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];
 47                     $fileType = $_FILES['photo']['type'];
 48
 49                     if (!in_array($fileType, $allowedTypes)) {
 50                         $error = 'Дозволені тільки файли JPG, PNG, GIF';
 51                     } elseif ($_FILES['photo']['size'] > 5 * 1024 * 1024) { // 5MB
 52                         $error = 'Розмір файлу не повинен перевищувати 5MB';
 53                     } else {
 54                         $extension = pathinfo($_FILES['photo']['name'], PATHINFO_EXTENSION);
 55                         $newFileName = 'profile_' . time() . '.' . $extension;
 56                         $uploadPath = $uploadDir . $newFileName;
 57
 58                         if (move_uploaded_file($_FILES['photo']['tmp_name'], $uploadPath)) {
 59                             if ($photoPath && file_exists($photoPath)) {
 60                                 unlink($photoPath);
 61                             }
 62                             $photoPath = $uploadPath;
 63                         } else {
 64                             $error = 'Помилка завантаження файлу';
 65                         }
 66                     }
 67                 } elseif (isset($_FILES['photo']) && $_FILES['photo']['error'] !== UPLOAD_ERR_NO_FILE) {
 68                     $error = 'Помилка завантаження файлу. Спробуйте ще раз.';
 69                 }
 70
 71                 if (!$error) {
 72                     $profileData = [
 73                         'name' => $name,
 74                         'surname' => $surname,
 75                         'birth_date' => $birthDate,
 76                         'description' => $description,
 77                         'photo' => $photoPath
 78                     ];
 79
 80                     if (file_put_contents($profileFile, json_encode($profileData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
 81                         $success = 'Профіль успішно збережено!';
 82                     } else {
 83                         $error = 'Помилка збереження даних';
 84                     }
 85                 }
 86             }
 87         }
 88     }
 89 }
 90
 91 $hasValidPhoto = !empty($profileData['photo']) && file_exists($profileData['photo']);
 92 if (!$hasValidPhoto && !empty($profileData['photo'])) {
 93     $profileData['photo'] = '';
 94     file_put_contents($profileFile, json_encode($profileData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
 95 }
 96 ?>
 97
 98 <h1>Профіль користувача</h1>
 99
100 <?php if ($error): ?>
101     <p style="color: red; font-weight: bold;"><?= htmlspecialchars($error) ?></p>
102 <?php endif; ?>
103
104 <?php if ($success): ?>
105     <p style="color: green; font-weight: bold;"><?= htmlspecialchars($success) ?></p>
106 <?php endif; ?>
107
108 <form method="POST" enctype="multipart/form-data" style="max-width: 600px; margin: 0 auto;">
109     <table style="margin: 0 auto; width: 100%;">
110         <tr>
111             <td colspan="2" style="text-align: center; padding-bottom: 20px;">
112                 <?php if ($hasValidPhoto): ?>
113                     <img src="<?= htmlspecialchars($profileData['photo']) ?>"
114                          style="width: 150px; height: 150px; object-fit: cover; border-radius: 10px; border: 2px solid #ddd;"    
115                          alt="Фото профілю">
116                 <?php else: ?>
117                     <div style="width: 150px; height: 150px; border: 2px dashed #ccc;
118                                 display: inline-flex; align-items: center; justify-content: center;
119                                 border-radius: 10px; color: #666; margin: 0 auto;">
120                         Немає фото
121                     </div>
122                 <?php endif; ?>
123             </td>
124         </tr>
125         <tr>
126             <td style="text-align: right; padding: 10px;"><label for="name">Ім'я:</label></td>
127             <td style="padding: 10px;">
128                 <input type="text" id="name" name="name"
129                        value="<?= htmlspecialchars($profileData['name'] ?? '') ?>"
130                        style="width: 200px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" required>
131             </td>
132         </tr>
133         <tr>
134             <td style="text-align: right; padding: 10px;"><label for="surname">Прізвище:</label></td>
135             <td style="padding: 10px;">
136                 <input type="text" id="surname" name="surname"
137                        value="<?= htmlspecialchars($profileData['surname'] ?? '') ?>"
138                        style="width: 200px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" required>
139             </td>
140         </tr>
141         <tr>
142             <td style="text-align: right; padding: 10px;"><label for="birth_date">Дата народження:</label></td>
143             <td style="padding: 10px;">
144                 <input type="date" id="birth_date" name="birth_date"
145                        value="<?= htmlspecialchars($profileData['birth_date'] ?? '') ?>"
146                        style="width: 200px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" required>
147             </td>
148         </tr>
149         <tr>
150             <td style="text-align: right; padding: 10px; vertical-align: top;"><label for="description">Стисла інформація:</label></td>
151             <td style="padding: 10px;">
152                 <textarea id="description" name="description" rows="5"
153                           style="width: 300px; padding: 8px; border: 1px solid #ccc; border-radius: 4px; resize: vertical;"      
154                           placeholder="Розкажіть про себе (мінімум 50 символів)" required><?= htmlspecialchars($profileData['description'] ?? '') ?></textarea>
155             </td>
156         </tr>
157         <tr>
158             <td style="text-align: right; padding: 10px;"><label for="photo">Фото:</label></td>
159             <td style="padding: 10px;">
160                 <input type="file" id="photo" name="photo" accept="image/jpeg,image/png,image/gif"
161                        style="padding: 8px;">
162                 <br><small style="color: #666;">Дозволені формати: JPG, PNG, GIF. Максимальний розмір: 5MB</small>
163             </td>
164         </tr>
165         <tr>
166             <td colspan="2" style="text-align: center; padding-top: 20px;">
167                 <button type="submit" style="padding: 12px 30px; font-size: 16px;">Зберегти</button>
168             </td>
169         </tr>
170     </table>
171 </form>


Б.7 Файл header.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/header.php 

  1 <?php
  2 if (session_status() == PHP_SESSION_NONE) {
  3     session_start();
  4 }
  5
  6 $isLoggedIn = isset($_SESSION['user_login']) && isset($_SESSION['login_time']);
  7 ?>
  8 <!DOCTYPE html>
  9 <html lang="uk">
 10 <head>
 11     <meta charset="UTF-8">
 12     <title><?= isset($pageTitle) ? $pageTitle : 'Web-магазин "Весна"' ?></title>
 13     <link rel="stylesheet" href="style.css">
 14 </head>
 15 <body>
 16     <header>
 17         <h1 style="margin: 0; padding: 10px 0;">Web-магазин "Весна"</h1>
 18         <nav style="text-align: center; padding: 10px 0;">
 19             <a href="index.php?page=home">Головна</a> |
 20             <?php if ($isLoggedIn): ?>
 21                 <a href="index.php?page=products">Товари</a> |
 22                 <a href="index.php?page=cart">Кошик</a> |
 23                 <a href="index.php?page=profile">Профіль</a> |
 24                 <a href="logout.php">Вихід (<?= htmlspecialchars($_SESSION['user_login']) ?>)</a>
 25             <?php else: ?>
 26                 <a href="index.php?page=login">Вхід</a>
 27             <?php endif; ?>
 28         </nav>
 29     </header>


Б.8 Файл login.php

GitHub репозиторій: https://github.com/NureKozodoiOlesia/smp-pzpi-23-2-kozodoi-olesia/blob/main/Lab4/smp-pzpi-23-2-kozodoi-olesia-lab4/smp-pzpi-23-2-kozodoi-olesia-lab4-code/login.php 

  1 <?php
  2 require_once 'credentials.php';
  3
  4 $error = '';
  5
  6 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  7     $userName = trim($_POST['userName'] ?? '');
  8     $password = $_POST['password'] ?? '';
  9
 10     if (empty($userName) || empty($password)) {
 11         $error = 'Будь ласка, заповніть всі поля';
 12     } elseif ($userName === $credentials['userName'] && $password === $credentials['password']) {
 13         $_SESSION['user_login'] = $userName;
 14         $_SESSION['login_time'] = date('Y-m-d H:i:s');
 15         header('Location: index.php?page=products');
 16         exit;
 17     } else {
 18         $error = 'Неправильне ім\'я користувача або пароль';
 19     }
 20 }
 21 ?>
 22
 23 <h1>Вхід до системи</h1>
 24
 25 <?php if ($error): ?>
 26     <div style="color: #d9534f; background-color: #f2dede; border: 1px solid #ebccd1; padding: 15px; border-radius: 5px; margin: 20px auto; max-width: 400px;">
 27         <?= htmlspecialchars($error) ?>
 28     </div>
 29 <?php endif; ?>
 30
 31 <form method="POST" style="max-width: 400px; margin: 20px auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background-color: #f9f9f9;">
 32     <table style="margin: 0 auto; width: 100%;">
 33         <tr>
 34             <td style="padding: 10px; text-align: right;"><label for="userName">Ім'я користувача:</label></td>
 35             <td style="padding: 10px;">
 36                 <input type="text" id="userName" name="userName"
 37                        value="<?= htmlspecialchars($_POST['userName'] ?? '') ?>"
 38                        style="width: 150px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" required>
 39             </td>
 40         </tr>
 41         <tr>
 42             <td style="padding: 10px; text-align: right;"><label for="password">Пароль:</label></td>
 43             <td style="padding: 10px;">
 44                 <input type="password" id="password" name="password"
 45                        style="width: 150px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" required>
 46             </td>
 47         </tr>
 48         <tr>
 49             <td colspan="2" style="text-align: center; padding-top: 20px;">
 50                 <button type="submit" style="padding: 10px 25px; font-size: 16px;">Увійти</button>
 51             </td>
 52         </tr>
 53     </table>
 54 </form>
 55
 56 <div style="margin-top: 20px; padding: 15px; background-color: #d1ecf1; border: 1px solid #bee5eb; border-radius: 5px; max-width: 400px; margin-left: auto; margin-right: auto;">
 57     <p style="margin: 0; color: #0c5460;"><strong>Тестові дані для входу:</strong></p>
 58     <p style="margin: 5px 0; color: #0c5460;">Логін: <code>Test</code></p>
 59     <p style="margin: 0; color: #0c5460;">Пароль: <code>123123</code></p>
 60 </div>
